<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework</groupId>
    <artifactId>gs-spring-boot</artifactId>
    <version>0.1.0</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.44</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.1.4.RELEASE</version>
        </dependency>


        <!--    junit5依赖    -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.4.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.4.2</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>2.23.4</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.bytebuddy</groupId>
                    <artifactId>byte-buddy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.9.12</version>
        </dependency>


        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.7</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <properties>
        <java.version>11</java.version>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--    单元测试  -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <!--       单元测试阶段排除 集成测试代码             -->
                    <excludes>
                        <exclude>**/*IntegrationTest</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!--   集成测试   -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <!--       只包含集成测试代码             -->
                    <includes>
                        <include>**/*IntegrationTest</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- 执行外部命令的插件 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <!-- pre-integration-test 执行 integration集成测试之前 先通过docker创建 测试数据库-->
                    <execution>
                        <id>start-test-database</id>
                        <!-- maven life circle 的 某个阶段-->
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <longModulepath>false</longModulepath>
                            <executable>docker</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>--name</argument>
                                <argument>test-mysql</argument>
                                <argument>-e</argument>
                                <argument>MYSQL_ROOT_PASSWORD=19920115asd</argument>
                                <argument>-e</argument>
                                <argument>MYSQL_DATABASE=dsying</argument>
                                <argument>-p</argument>
                                <argument>3307:3306</argument>
                                <argument>-d</argument>
                                <argument>mysql</argument>
                                <argument>mysqld</argument>
                                <argument>--default-authentication-plugin=mysql_native_password</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- 数据库启动需要时间， 所以 sleep 20秒-->
                    <execution>
                        <id>wait-test-database</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <longModulepath>false</longModulepath>
                            <executable>sleep</executable>
                            <arguments>
                                <argument>20</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- post-integration-test 集成测试integration阶段过去之后 删除docker中的 测试数据库-->
                    <execution>
                        <id>teardown-test-database</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <longModulepath>false</longModulepath>
                            <executable>docker</executable>
                            <arguments>
                                <argument>rm</argument>
                                <argument>-f</argument>
                                <argument>test-mysql</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- flyway 数据库迁移工具 -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>5.2.4</version>
                <configuration>
                    <url>jdbc:mysql://127.0.0.1:3306/dsying?useSSL=false&amp;allowPublicKeyRetrieval=true</url>
                    <user>root</user>
                    <password>19920115asd</password>
                </configuration>
                <executions>
                    <!--pre-integration-test docker创建后 测试数据库之后 通过flyway 自动执行建表语句-->
                    <execution>
                        <id>test-database-setup</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                        <configuration>
                            <url>jdbc:mysql://localhost:3307/dsying?useSSL=false&amp;allowPublicKeyRetrieval=true</url>
                            <user>root</user>
                            <password>19920115asd</password>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>